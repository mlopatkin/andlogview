[versions]
andlogview = "0.24"
checkstyle = "10.21.1"
dagger = "2.55"
errorpronePlugin = "4.3.0"
flatlaf = "3.5.4"
guava = "33.4.0-jre"
mockito = "4.11.0"
compileJdkVersion = "17"  # JDK version used for compilation
# Language level used for compilation. Java 17 introduces sealed classes that may not be supported in Jabel, so we stick
# with 16 for now
sourceJavaVersion = "16"
runtimeJdkVersion = "8"  # JDK version used at runtime, determines available APIs

[libraries]
build-errorprone-core = "com.google.errorprone:error_prone_core:2.36.0"
# Errorprone plugin allows to configure Errorprone compiler
build-errorprone-plugin = { module = "net.ltgt.gradle:gradle-errorprone-plugin", version.ref = "errorpronePlugin" }
# Runtime plugin allows preparing runtime images with JDK included
build-jlink-plugin = "org.beryx.runtime:org.beryx.runtime.gradle.plugin:1.13.1"
build-jabel = "com.github.bsideup.jabel:jabel-javac-plugin:1.0.0"
build-nullaway = "com.uber.nullaway:nullaway:0.12.3"
checkerframeworkAnnotations = "org.checkerframework:checker-qual:3.38.0"
commons-compress = "org.apache.commons:commons-compress:1.27.1"
dagger-compiler = { module = "com.google.dagger:dagger-compiler", version.ref = "dagger" }
dagger-runtime = { module = "com.google.dagger:dagger", version.ref = "dagger" }
ddmlib = "com.android.tools.ddms:ddmlib:26.1.3"
flatlaf-core = { module = "com.formdev:flatlaf", version.ref = "flatlaf" }
flatlaf-extras = { module = "com.formdev:flatlaf-extras", version.ref = "flatlaf" }
gson = "com.google.code.gson:gson:2.11.0"
guava = { module = "com.google.guava:guava", version.ref = "guava" }
jopt = "net.sf.jopt-simple:jopt-simple:5.0.4"
# Reload4j is a drop-in replacement for log4j 1.x
log4j = "ch.qos.reload4j:reload4j:1.2.26"
# MigLayout 11.x requires Java 11, so we stick with 5.x for now.
miglayout = "com.miglayout:miglayout-swing:5.3"
slf4j-api = "org.slf4j:slf4j-api:2.0.16"
slf4j-reload4j = "org.slf4j:slf4j-reload4j:2.0.16"
test-assertj-bom = "org.assertj:assertj-bom:3.27.3"
test-assertj-core = { module = "org.assertj:assertj-core" }
test-assertj-guava = { module = "org.assertj:assertj-guava" }
test-guavaTestlib = { module = "com.google.guava:guava-testlib", version.ref = "guava" }
test-hamcrest-hamcrest = "org.hamcrest:hamcrest:3.0"
test-hamcrest-optional = "com.spotify:hamcrest-optional:1.3.2"
test-jetbrainsAnnotations = "org.jetbrains:annotations:26.0.2"
test-junit4 = "junit:junit:4.13.2"
test-junit5-bom = "org.junit:junit-bom:5.11.4"
test-junit5-jupiter = { module = "org.junit.jupiter:junit-jupiter" }
test-junit5-vintageEngine = { module = "org.junit.vintage:junit-vintage-engine" }
test-mockito-core = { module = "org.mockito:mockito-core", version.ref = "mockito" }
test-mockito-jupiter = { module = "org.mockito:mockito-junit-jupiter", version.ref = "mockito" }

[plugins]
# JMH plugin allows building and running JMH benchmarks
jmh = "me.champeau.jmh:0.7.3"
# Shadow plugin provides means to prepare a single-JAR distribution of the tool
shadow = "com.gradleup.shadow:8.3.8"
